name: JHapy Utils Spring Boot Admin Server CI

on:
  push:
  workflow_dispatch:

env:
  IMAGE_NAME: utils-spring-boot-admin-server

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - run: echo Build for SHA = ${{ github.event.client_payload.sha }}, REF = ${{ github.event.client_payload.ref }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Set up JDK 1.15
        uses: actions/setup-java@v1
        with:
          java-version: 1.15
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/jhapy/**
          key: ${{ runner.os }}-maven-utils-spring-boot-admin-server
          restore-keys: |
            ${{ runner.os }}-maven-utils-spring-boot-admin-server
      - name: Clean Maven Repository
        run: rm -rf ~/.m2/repository/org/jhapy
      - name: Build with Maven
        run: mvn -Dmaven.test.skip -s .settings.xml -Dmaven.javadoc.skip -Dossrh_username=${{secrets.ossrh_username}} -Dossrh_password=${{secrets.ossrh_password}} --file pom.xml deploy

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag image

      - name: Log into Docker Hub Registry
        run: echo "${{ secrets.dockerhub_password }}" | docker login --username ${{ secrets.dockerhub_username }}  --password-stdin

      - name: Push image to Docker Hub Registry
        run: |
          IMAGE_ID=jhapy/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - name: Slack Success
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()